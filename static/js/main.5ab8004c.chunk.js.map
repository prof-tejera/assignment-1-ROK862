{"version":3,"sources":["utils/firebase.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","utils/helpers.js","components/buttons/ActionButton.js","components/buttons/AnchorButton.js","components/Inputs/Options.js","components/generic/DisplayBreaks.js","components/Inputs/Input.js","components/generic/DisplayRounds.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","audio/SoundEffect.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","components/buttons/Button.js","components/Panel/Panel.js","components/forms/Login.js","App.js","index.js"],"names":["abstract","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","getAnalytics","database","getDatabase","Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","require","default","ref","set","consoleStyle","api","sys","db","ui","APP_GLOBAL","USER","LOGIN","status","VERSION","BUILD","warn","message","caller","console","JSON","stringify","code","error","info","log","getDate","Date","toISOString","slice","replace","getGlobals","getJSON","endpoint","options","apiCall","callback","Promise","resolve","reject","fetch","then","res","json","ex","getUserData","isLoggedIn","getLogin","user","onSuccess","callToFuture","a","get","refId","userData","push","cols","catch","err","debugClickEvent","e","getDynamicTabs","id","render","comps","forEach","n","length","renderComp","getButtonTitle","input","Helper","getOnClick","ActionButton","className","theme","onClick","name","AnchorButton","Options","onChange","target","value","i","DisplayBreaks","Array","keys","onSetHours","onSetMinutes","onSetSeconds","onConvertToTime","Input","placeholder","DisplayRounds","onSetRounds","onStartTiming","onStopTimer","DigitalWatch","ComponentTitle","StopWatch","state","date","currentTime","hours","minutes","seconds","entry","score","onConvertToSeconds","parseInt","dateTime","setSeconds","substr","onStartTimer","setState","onPauseTimmer","timmerTickTock","val","startOnCurrentThread","setTimeout","newTime","formatedTime","renderState","Countdown","timeInSeconds","SoundEffect","volume","loop","autoplay","src","playing","isPlaying","XY","rounds","enableSound","newRounds","onTriggerSound","WorkflowLabel","Tabata","workflow","break","onConvertToBreakSeconds","onConvertToBreakTime","b","onSetBreakHours","onSetBreakMinutes","onSetBreakSeconds","h","m","s","timmerBreakTickTock","onStartBreakriming","Timers","Timer","TimerTitle","TimerSubtitle","App","timers","subTitle","C","Stopwatch","recId","timer","Button","current","text","Panel","children","LoginForm","v","style","padding","useState","USER_DATA","getAccess","comp","Helmet","content","to","exact","path","Login","DocumentationView","TimersView","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ab8004c.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase } from \"firebase/database\";\n\nconst abstract = () => {}\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjgDxXJD6LdX2xNvRe2jEml6hjWhbLQ1M\",\n  authDomain: \"cs39harvard.firebaseapp.com\",\n  projectId: \"cs39harvard\",\n  storageBucket: \"cs39harvard.appspot.com\",\n  messagingSenderId: \"479314369399\",\n  appId: \"1:479314369399:web:cf9023977e0124275d1f72\",\n  measurementId: \"G-ND61GXC9L1\"\n};\n\n// Initialize Firebase\nabstract.firebase   = initializeApp(firebaseConfig,'CSCI39-Harvard-Fitness-App');\nabstract.analytics  = getAnalytics(abstract.firebase);\nabstract.database   = getDatabase(abstract.firebase);\n\nexport default abstract;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\nborder: 1px solid #dddddd;\nmargin: 20px 0px;\nborder-radius: 10px;\nbox-shadow: 0px 5px 9px 0px #0000003d;\n`;\n\nconst Container = styled.div`\njustify-content: center;\n    width: auto;\n    height: 100%;\n    overflow: scroll;\n    background: white;\n    padding: 50px;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// import { Helpers } from \"react-scroll\";\n\n// everywhere.\nconst { default: firebase } = require(\"./firebase\");\n// const { collection, getDocs } = require(\"firebase/firestore\"); Please uncomment when using firebase.\nconst { ref, set /*, get*/ } = require(\"firebase/database\");\n\nconst consoleStyle = (color) =>\n  `color:white; background: ${color}; font-weight: bold; padding:5px; border-radius:5px`;\n\n// Helper Modules\nconst abstract = () => {};\nabstract.api = () => {};\nabstract.sys = () => {};\nabstract.db = () => {};\nabstract.ui = () => {};\n\n// App Global Properties.\nconst APP_GLOBAL = {\n  USER: null,\n  LOGIN: { status: \"uninitialized\" },\n  VERSION: \"1.0.1\",\n  BUILD: \"Development\"\n};\n\n// System Tools\nabstract.sys.warn = (message, caller = null) =>\n  console.warn(\n    `%c${JSON.stringify({ code: 201, message: message, caller: caller })}`,\n    consoleStyle(\"orange\")\n  );\nabstract.sys.error = (message, caller = null) =>\n  console.error(\n    `%c${JSON.stringify({ code: 501, message: message, caller: caller })}`,\n    consoleStyle(\"red\")\n  );\nabstract.sys.info = (message, caller = null) =>\n  console.log(\n    `%c${JSON.stringify({ code: 200, message: message, caller: caller })}`,\n    consoleStyle(\"gray\")\n  );\nabstract.sys.getDate = () =>\n  new Date().toISOString().slice(0, 19).replace(\"T\", \" \");\nabstract.sys.getGlobals = () => APP_GLOBAL;\n\n// Helper Methods\nabstract.api.getJSON = ({ endpoint, options, callback }) => {\n  const apiCall = new Promise((resolve, reject) => {\n    const ops = options ? options : {};\n    fetch(endpoint, ops).then((res) => {\n      try {\n        resolve(res.json());\n      } catch (ex) {\n        abstract.sys.warn(\n          `api call to [${endpoint}] has been rejected due to the following exception: ${ex}`,\n          null\n        );\n        reject({ error: 201 });\n      }\n    });\n    apiCall.then();\n  });\n};\n\nabstract.sys.getUserData = () => {\n  if (APP_GLOBAL.LOGIN.status === \"active\") return APP_GLOBAL;\n  return null;\n};\n\nabstract.sys.isLoggedIn = () => {\n  if (APP_GLOBAL.LOGIN && APP_GLOBAL.LOGIN.status === \"active\") {\n    console.log(APP_GLOBAL.LOGIN);\n    return true;\n  } else {\n    return false;\n  }\n};\n\nabstract.sys.getLogin = (user, onSuccess = null) => {\n  if (abstract.sys.isLoggedIn()) return true;\n\n  // Reset login process.\n  // Did we get a user from login input?\n  // Set Global user property to user name.\n  \n  const callToFuture = new Promise (async (resolve, reject) => {\n    APP_GLOBAL.LOGIN = { status: \"unauthorized\" };\n    if (!user) reject([]);\n    const userData = await abstract.db.get({ refId: `appUsers/${user}` }).then();\n    APP_GLOBAL.USER = user;\n    console.log(\n      `%c System is trying to log you in as [${APP_GLOBAL.USER}]`,\n      consoleStyle(\"black\")\n    );\n    if (userData) {\n      userData.status = \"active\";\n      APP_GLOBAL.LOGIN = userData;\n      console.log(\n        `%c System requirs authentication (mocked) [${JSON.stringify(userData)}]`,\n        consoleStyle(\"green\")\n      );\n      if (onSuccess) onSuccess(APP_GLOBAL.LOGIN);\n      resolve([]);\n    } else {\n      console.log(\n        `%c Authentication failed (mocked) [${JSON.stringify(userData)}]`,\n        consoleStyle(\"green\")\n      );\n      reject([]);\n    }\n  });  \n\n  callToFuture.then((res)=> {\n      // Return or invoke callback.\n      if (onSuccess != null) {\n        onSuccess(res);\n      }\n  });\n  \n};\n\nabstract.db.push = ({ refId, cols, callback }) => {\n  // Test required inputs.\n  if (!refId || !cols)\n    return abstract.sys.warn(\n      \"Object reference error occured while parsing data to Firebase. This query will not be executed :(\"\n    );\n\n  const callToFuture = new Promise (async (resolve, reject) => {\n    await set(ref(firebase.database, `${refId}/`), cols);\n    resolve(`{action: \"set\", refId: \"${refId}\"\"}`);\n  });\n  \n  callToFuture.then((res)=>{\n      abstract.sys.info(res);\n  });\n};\n\nabstract.db.get = async ({ refId }) => {\n  // ## Hmm. Lets try something different here. We will query firebase JSON file instead of using the\n  // ## built in database get function.\n  // 1. Test required inputs.\n  // 2. Query furebase json file in cloud. Seems to work faster for my setting.\n  // 3. Convert response data from json string to array.\n  // 4. Return json object instead of promise.\n\n  return new Promise (async (resolve, reject) => {\n    if (!refId)\n    return abstract.sys.warn(\n      \"Object reference error occured while parsing data to Firebase. This query will not be executed :(\"\n    );\n    return await fetch(\n      `https://cs39harvard-default-rtdb.firebaseio.com/${refId}.json`\n    )\n      .then((res) => res.json())\n      .then((res) => resolve(res))\n      .catch((err) => {\n        reject([{ error: 500, message: err }]);\n      });\n  });\n};\n\nabstract.sys.debugClickEvent = (e) => {\n  return { default: () => console.log(\"Action Button Called\", e) }.default;\n};\n\nabstract.ui.getDynamicTabs = async (id, render) => {\n  // ## Okay, this is another experimental module.\n  // We are going to generate form data from firebase JSON records.\n  // With this module, i intent to solve a problem with shipping friquency of minor\n  // updates. Essentially, with this, we can ship updates to devices in realtime--mearly with\n  // database updates.\n\n  return new Promise(async (resolve, reject) => {\n    const comps = await abstract.db.get({ refId: id, cols: render });\n    if (comps) {\n      abstract.sys.warn(comps);\n      comps.forEach((e, n) => {\n        // map render components to the assiciated objects.\n        if (n < render.length) e.renderComp = render[n];\n      });\n      resolve(comps);\n    } else {\n      reject([]);\n    }\n  });\n};\n\nexport default abstract;\n","import React from \"react\";\nimport Helper from \"../../utils/helpers\";\n\nconst getButtonTitle = (input) => {\n    if (input) return input;\n    Helper.sys.info(`Hmm, you are missing a title on a button.`);\n    return 'Untitled :)';\n}\n\nconst getClassName = (input) => {\n  if (input) return input;\n  return 'Default-Action-Button';\n}\n\nconst getOnClick = (input) => {\n  if (input) return input;\n  return ()=>console.log('Default button action.');\n}\n\nclass ActionButton extends React.Component {\n\n  render() {\n    return <button className={getClassName(this.props.theme)} onClick={getOnClick(this.props.onClick)}>{getButtonTitle(this.props.name)}</button>;\n  }\n}\n\n// className getButtonTitle\n\nexport default ActionButton;\n","import React from \"react\";\nimport Helper from \"../../utils/helpers\";\n\nconst getButtonTitle = (input) => {\n    if (input) return input;\n    Helper.sys.info(`Hmm, you are missing a title on a button.`);\n    return 'Untitled :)';\n}\n\nconst getClassName = (input) => {\n    if (input) return input;\n    return 'Default-Anchor-Button';\n}\n\nclass AnchorButton extends React.Component {\n\n  render() {\n    return <button onClick={this.props.onClick} className={getClassName(this.props.theme)}>{getButtonTitle(this.props.name)}</button>;\n  }\n}\n\nexport default AnchorButton;\n","import { Component } from 'react';\nimport './Input.css';\n\nclass Options extends Component {\n\n  render() {\n    return (\n      <div className='Option-Wraper'>\n        <label>{this.props.name}</label>\n        <select onChange={e => {this.props.onChange(e.target.value);}} className={(this.props.className) ? this.props.className : 'Default-select'}>\n            {((this.props.options) ? this.props.options : ['Nothing found']).map((e,i)=>{\n                return (\n                    <option value={e}>\n                        {e}\n                    </option>\n                )\n            })}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Options;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\n\nconst Title = styled.div`\nfont-size: 30px;\n`;\n\nclass DisplayBreaks extends React.Component {\n    render() {\n        return (\n            <div>\n                <Title>{this.props.name}</Title>\n                <div className='StopWatch'>\n                    <Options options={[...Array(24).keys()]} onChange={this.props.onSetHours} name='Hours' />\n                    <Options options={[...Array(60).keys()]} onChange={this.props.onSetMinutes} name='Minutes' />\n                    <Options options={[...Array(60).keys()]} onChange={this.props.onSetSeconds} name='Seconds' />\n                </div>\n                <div className='Preview'>\n                    {this.props.onConvertToTime()}\n                </div>\n            </div>\n        )\n    }\n}\n//onSetHours onSetMinutes onSetSeconds onSetRounds onConvertToTime onStartTiming onStopTimer\nexport default DisplayBreaks;","import { Component } from 'react';\nimport './Input.css';\n\nclass Input extends Component {\n  render() {\n    return (\n      <input\n        onChange={e => {\n          this.props.onChange(e.target.value);\n        }}\n        className=\"Default-input\"\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\nimport Input from \"../Inputs/Input\";\nimport AnchorButton from \"../buttons/AnchorButton\";\n\nconst Title = styled.div`\nfont-size: 30px;\n`;\n\nclass DisplayRounds extends React.Component {\n    render() {\n        return (\n            <div>\n                <Title>{this.props.name}</Title>\n                <div className='StopWatch'>\n                    <Options options={[...Array(24).keys()]} onChange={this.props.onSetHours} name='Hours' />\n                    <Options options={[...Array(60).keys()]} onChange={this.props.onSetMinutes} name='Minutes' />\n                    <Options options={[...Array(60).keys()]} onChange={this.props.onSetSeconds} name='Seconds' />\n                </div>\n                <div className='Preview'>\n                <Input onChange={this.props.onSetRounds} placeholder='Number of Rounds' />\n                </div>\n                <div className='Preview'>\n                    {this.props.onConvertToTime()}\n                </div>\n                <AnchorButton name='Start riming' onClick={this.props.onStartTiming} />\n                <AnchorButton name='Close Timer' onClick={this.props.onStopTimer} />\n            </div>\n        )\n    }\n}\n//onSetHours onSetMinutes onSetSeconds onSetRounds onConvertToTime onStartTiming onStopTimer\nexport default DisplayRounds;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport ActionButton from \"../components/buttons/ActionButton\";\nimport AnchorButton from \"../components/buttons/AnchorButton\";\nimport DisplayBreaks from \"../components/generic/DisplayBreaks\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\nimport Input from \"../components/Inputs/Input\";\nimport Options from \"../components/Inputs/Options\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n  background: white;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Action Button \"\n            component={<Input name=\"Doc Button\" placeholder=\"Doc Input\" />}\n            propDocs={[\n              {\n                prop: \"onChange\",\n                description: \"onChange event handler passed down from parent component.\",\n                type: \"string\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"className\",\n                description: \"Class name--custom styling.\",\n                type: \"string\",\n                defaultValue: \"Default-input\",\n              },{\n                prop: \"placeholder\",\n                description: \"The placeholder value displayed when component value is empty.\",\n                type: \"string\",\n                defaultValue: \"Required.\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Anchor Button \"\n            component={<AnchorButton name=\"Doc Button\" />}\n            propDocs={[\n              {\n                prop: \"className\",\n                description: \"Change button theme.\",\n                type: \"string\",\n                defaultValue: \"Default-Action-Button\",\n              },{\n                prop: \"name\",\n                description: \"Change the title text displayed on the button.\",\n                type: \"string\",\n                defaultValue: \"Untitled :(\",\n              },{\n                prop: \"onClick\",\n                description: \"Button onclick event.\",\n                type: \"string\",\n                defaultValue: \"()=>log..default action\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Action Button \"\n            component={<ActionButton name=\"Doc Button\" />}\n            propDocs={[\n              {\n                prop: \"className\",\n                description: \"Change button theme.\",\n                type: \"string\",\n                defaultValue: \"Default-Action-Button\",\n              },{\n                prop: \"name\",\n                description: \"Change the title text displayed on the button.\",\n                type: \"string\",\n                defaultValue: \"Untitled :(\",\n              },{\n                prop: \"onClick\",\n                description: \"Button onclick event.\",\n                type: \"string\",\n                defaultValue: \"()=>log..default action\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Action Button \"\n            component={<Options options={[...Array(24).keys()]} onChange={(e=0)=>null} name='Doc Options' />}\n            propDocs={[\n              {\n                prop: \"name\",\n                description: \"The label to be displayed next to the select drop down.\",\n                type: \"string\",\n                defaultValue: \"Untitled :(\",\n              },\n              {\n                prop: \"options\",\n                description: \"An array object used to generate selectable options.\",\n                type: \"string\",\n                defaultValue: \"['Choose an Option']\",\n              },\n              {\n                prop: \"onChange\",\n                description: \"onChange event handler passed down from parent component.\",\n                type: \"string\",\n                defaultValue: \"Required\",\n              },\n            ]}\n          />\n          <DocumentComponent \n            title=\"Loading spinner \"\n            component={<DisplayBreaks onSetHours={(e=1)=>null} onSetMinutes={(e=1)=>null} onSetSeconds={(e=1)=>null} onSetRounds={(e=1)=>null} onConvertToTime={(e=1)=>\"00:00:00\"} onStartTiming={(e=1)=>null} onStopTimer={(e=1)=>null} />}\n            propDocs={[\n              {\n                prop: \"onSetHours\",\n                description: \"onSetHours updates parent state once the hours drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetMinutes\",\n                description: \"onSetMinutes updates parent state once the minutes drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetSeconds\",\n                description: \"onSetSeconds updates parent state once the seconds drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetRounds\",\n                description: \"onSetRounds updates parent state once the rounds input changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onStartTiming\",\n                description: \"onStartTiming updates parent state once the start riming button has been clicked.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetHours\",\n                description: \"onSetHours updates parent state once the hours drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onStopTimer\",\n                description: \"onStopTimer updates parent state once the Stop Timer button is clicked.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },\n            ]}\n          />\n         \n         <DocumentComponent \n            title=\"Loading spinner \"\n            component={<DisplayRounds onSetHours={(e=1)=>null} onSetMinutes={(e=1)=>null} onSetSeconds={(e=1)=>null} onSetRounds={(e=1)=>null} onConvertToTime={(e=1)=>\"00:00:00\"} onStartTiming={(e=1)=>null} onStopTimer={(e=1)=>null} />}\n            propDocs={[\n              {\n                prop: \"onSetHours\",\n                description: \"onSetHours updates parent state once the hours drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetMinutes\",\n                description: \"onSetMinutes updates parent state once the minutes drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetSeconds\",\n                description: \"onSetSeconds updates parent state once the seconds drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetRounds\",\n                description: \"onSetRounds updates parent state once the rounds input changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onStartTiming\",\n                description: \"onStartTiming updates parent state once the start riming button has been clicked.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onSetHours\",\n                description: \"onSetHours updates parent state once the hours drop down changed.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },{\n                prop: \"onStopTimer\",\n                description: \"onStopTimer updates parent state once the Stop Timer button is clicked.\",\n                type: \"function\",\n                defaultValue: \"Required\",\n              },\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport Helper from \"../../utils/helpers\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\n\nconst DigitalWatch = styled.div`\nbackground: #bb0092;\nborder-radius: 30px;\nfont-size: 60px;\ntext-align: center;\ncolor: white;\n`;\n\nconst ComponentTitle = styled.div`\nfont-size: 12px;\ntext-transform: uppercase;\nmargin-bottom: 20px;\ncolor: #3e94cd;\nfont-weight: bold;\n`;\n\nclass StopWatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: 'inactive',\n      date: Helper.sys.getDate(),\n      currentTime: '',\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      entry: 'new',\n      score: -1\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    this.onConvertToSeconds = () => parseInt((this.state.hours * 60) * 60) + parseInt(this.state.minutes * 60) + parseInt(this.state.seconds);\n     \n    this.onConvertToTime = (input = null) =>  {\n      console.log(this.onConvertToSeconds(),\"Time Calc\");\n      let dateTime = new Date(null);\n      dateTime.setSeconds((input) ? input : this.onConvertToSeconds()); // specify value of SECONDS\n      return dateTime.toISOString().substr(11, 8);\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStopTimer = () => {\n      this.setState({\n        status: 'inactive',\n        currentTime: 0.0\n      });\n    }\n\n    this.onPauseTimmer = () => {\n      this.setState({\n        status: 'paused',\n      });\n    }\n\n    this.onStartTiming = () => {\n      const timeInSeconds = 0;\n      this.setState({\n        status: 'riming',\n        currentTime: timeInSeconds\n      });\n      this.timmerTickTock(true);\n    }\n\n    this.onSetHours = (val) => {\n      this.setState({\n        hours: val,\n      });\n    }\n\n    this.onSetMinutes = (val) => {\n      this.setState({\n        minutes: val,\n      });\n    }\n\n    this.onSetSeconds = (val) => {\n      this.setState({\n        seconds: val,\n      });\n    }\n\n    this.timmerTickTock = (startOnCurrentThread=false) => {\n      if (this.state.status !== 'riming' && !startOnCurrentThread) return;\n\n      setTimeout(()=>{\n        const newTime = this.state.currentTime + 1.0;\n        if (this.onConvertToSeconds() < newTime)\n          return;\n        const formatedTime = this.onConvertToTime(newTime);\n        this.setState({\n          currentTime: newTime,\n          formatedTime: formatedTime,\n        });\n        this.timmerTickTock();\n      },1000);\n    }\n\n    this.renderState = () => {\n      if (this.state.status === 'inactive')\n        return <AnchorButton name='Start Now' onClick={this.onStartTimer} />;\n        else if (this.state.status === 'active')\n        return <DigitalWatch>\n          <div className='StopWatch'>\n            <Options options={[...Array(24).keys()]} onChange={this.onSetHours} name='Hours' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetMinutes} name='Minutes' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetSeconds} name='Seconds' />\n          </div>\n          <div className='Preview'>\n            {this.onConvertToTime()}\n          </div>\n          <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n          <AnchorButton name='Close Timer' onClick={this.onStopTimer} />\n        </DigitalWatch>\n      else if (this.state.status === 'riming')\n      return <DigitalWatch>\n        <div className='StopWatch'>\n          {this.state.formatedTime}\n        </div>\n        <AnchorButton name='Pause' onClick={this.onPauseTimmer} />\n      </DigitalWatch>\n       else if (this.state.status === 'paused')\n       return <DigitalWatch>\n         <div className='StopWatch'>\n           {this.state.formatedTime}\n         </div>\n         <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n         <AnchorButton name='Stop riming' onClick={this.onStopTimer} />\n       </DigitalWatch>\n    }\n\n    return <div className={(this.props.theme) ? this.props.theme : 'Default-Pink-Theme'}>\n      <ComponentTitle>StopWatch</ComponentTitle>\n      {this.renderState()}\n    </div>;\n  }\n}\n\nexport default StopWatch;","import React from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport Helper from \"../../utils/helpers\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\n\nconst DigitalWatch = styled.div`\nbackground: #bb0092;\nborder-radius: 30px;\nfont-size: 60px;\ntext-align: center;\ncolor: white;\n`;\n\nconst ComponentTitle = styled.div`\nfont-size: 12px;\ntext-transform: uppercase;\nmargin-bottom: 20px;\ncolor: #3e94cd;\nfont-weight: bold;\n`;\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: 'inactive',\n      date: Helper.sys.getDate(),\n      currentTime: '',\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      entry: 'new',\n      score: -1\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    this.onConvertToSeconds = () => parseInt((this.state.hours * 60) * 60) + parseInt(this.state.minutes * 60) + parseInt(this.state.seconds);\n   \n    this.onConvertToTime = (input = null) =>  {\n      console.log(this.onConvertToSeconds(),\"Time Calc\");\n      let dateTime = new Date(null);\n      dateTime.setSeconds((input) ? input : this.onConvertToSeconds()); // specify value of SECONDS\n      return dateTime.toISOString().substr(11, 8);\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStopTimer = () => {\n      this.setState({\n        status: 'inactive',\n        currentTime: 0.0\n      });\n    }\n\n    this.onPauseTimmer = () => {\n      this.setState({\n        status: 'paused',\n      });\n    }\n\n    this.onStartTiming = () => {\n      const timeInSeconds = this.onConvertToSeconds();\n      this.setState({\n        status: 'riming',\n        currentTime: timeInSeconds\n      });\n      this.timmerTickTock(true);\n    }\n\n    this.onSetHours = (val) => {\n      this.setState({\n        hours: val,\n      });\n    }\n\n    this.onSetMinutes = (val) => {\n      this.setState({\n        minutes: val,\n      });\n    }\n\n    this.onSetSeconds = (val) => {\n      this.setState({\n        seconds: val,\n      });\n    }\n\n    this.timmerTickTock = (startOnCurrentThread=false) => {\n      if (this.state.status !== 'riming' && !startOnCurrentThread) return;\n\n      setTimeout(()=>{\n        const newTime = this.state.currentTime - 1.0;\n        if (newTime < 0)\n          return;\n        const formatedTime = this.onConvertToTime(newTime);\n        this.setState({\n          currentTime: newTime,\n          formatedTime: formatedTime,\n        });\n        this.timmerTickTock();\n      },1000);\n    }\n\n    this.renderState = () => {\n      if (this.state.status === 'inactive')\n        return <AnchorButton name='Start Now' onClick={this.onStartTimer} />;\n        else if (this.state.status === 'active')\n        return <DigitalWatch>\n          <div className='StopWatch'>\n            <Options options={[...Array(24).keys()]} onChange={this.onSetHours} name='Hours' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetMinutes} name='Minutes' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetSeconds} name='Seconds' />\n          </div>\n          <div className='Preview'>\n            {this.onConvertToTime()}\n          </div>\n          <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n          <AnchorButton name='Close Timer' onClick={this.onStopTimer} />\n        </DigitalWatch>\n      else if (this.state.status === 'riming')\n      return <DigitalWatch>\n        <div className='StopWatch'>\n          {this.state.formatedTime}\n        </div>\n        <AnchorButton name='Pause' onClick={this.onPauseTimmer} />\n      </DigitalWatch>\n       else if (this.state.status === 'paused')\n       return <DigitalWatch>\n         <div className='StopWatch'>\n           {this.state.formatedTime} s\n         </div>\n         <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n         <AnchorButton name='Stop riming' onClick={this.onStopTimer} />\n       </DigitalWatch>\n    }\n\n    return <div className={(this.props.theme) ? this.props.theme : 'Default-Pink-Theme'}>\n      <ComponentTitle>Countdown</ComponentTitle>\n      {this.renderState()}\n    </div>;\n  }\n}\n\nexport default Countdown;","import React from \"react\";\nimport Audio from \"react-howler\";\n\n\nclass SoundEffect extends React.Component {\n    \n    render() {\n        return <Audio volume='0.4' loop={false} autoplay={false} src=\"https://assets.mixkit.co/sfx/download/mixkit-completion-of-a-level-2063.wav\" playing={this.props.isPlaying} />\n    }\n}\n\nexport default SoundEffect;","import React from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport Helper from \"../../utils/helpers\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\nimport Input from \"../Inputs/Input\";\nimport SoundEffect from \"../../audio/SoundEffect\";\n\n\n\nconst DigitalWatch = styled.div`\nbackground: #bb0092;\nborder-radius: 30px;\nfont-size: 60px;\ntext-align: center;\ncolor: white;\n`;\n\nconst ComponentTitle = styled.div`\nfont-size: 12px;\ntext-transform: uppercase;\nmargin-bottom: 20px;\ncolor: #3e94cd;\nfont-weight: bold;\n`;\n\nclass XY extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: 'inactive',\n      date: Helper.sys.getDate(),\n      formatedTime: '',\n      currentTime: '',\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      entry: 'new',\n      rounds: 1,\n      enableSound: false,\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    this.onConvertToSeconds = () => parseInt((this.state.hours * 60) * 60) + parseInt(this.state.minutes * 60) + parseInt(this.state.seconds);\n    \n    this.onConvertToTime = (input = null) =>  {\n      console.log(this.onConvertToSeconds(),\"Time Calc\");\n      let dateTime = new Date(null);\n      dateTime.setSeconds((input) ? input : this.onConvertToSeconds()); // specify value of SECONDS\n      return dateTime.toISOString().substr(11, 8);\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStopTimer = () => {\n      this.setState({\n        status: 'inactive',\n        currentTime: 0.0\n      });\n    }\n\n    this.onPauseTimmer = () => {\n      this.setState({\n        status: 'paused',\n      });\n    }\n\n    this.onStartTiming = () => {\n      const timeInSeconds = 0;\n      this.setState({\n        status: 'riming',\n        currentTime: timeInSeconds\n      });\n      this.timmerTickTock(true);\n    }\n\n    this.onSetHours = (val) => {\n      this.setState({\n        hours: val,\n      });\n    }\n\n    this.onSetRounds = (val) => {\n      this.setState({\n        rounds: val,\n      });\n    }\n\n    this.onSetMinutes = (val) => {\n      this.setState({\n        minutes: val,\n      });\n    }\n\n    this.onSetSeconds = (val) => {\n      this.setState({\n        seconds: val,\n      });\n    }\n\n    this.timmerTickTock = (startOnCurrentThread=false) => {\n      if (this.state.status !== 'riming' && !startOnCurrentThread) return;\n\n      setTimeout(()=>{\n        let newTime = this.state.currentTime + 1.0;\n        const formatedTime = this.onConvertToTime(newTime);\n        \n        if (this.onConvertToSeconds() <= newTime) {\n          console.log(this.onConvertToSeconds(), newTime);\n          if (this.state.rounds > 0) {\n            const newRounds = this.state.rounds - 1;\n            newTime = 0;\n            this.setState({\n              rounds: newRounds\n            });\n          } \n        }\n        \n        this.setState({\n          currentTime: newTime,\n          formatedTime: formatedTime,\n        });\n        if (this.state.rounds > 0 || (this.onConvertToSeconds() > newTime))\n          this.timmerTickTock();\n      },1000);\n    }\n\n    \n    this.onTriggerSound = () => {\n      const newTime = this.state.currentTime;\n      if ((!this.state.enableSound && this.state.rounds > 0) || (this.onConvertToSeconds() > newTime)) {\n        return false;\n      }\n      return true;\n    }\n\n    this.renderState = () => {\n      if (this.state.status === 'inactive')\n        return <AnchorButton name='Start Now' onClick={this.onStartTimer} />;\n        else if (this.state.status === 'active')\n        return <DigitalWatch>\n          <div className='StopWatch'>\n            <Options options={[...Array(24).keys()]} onChange={this.onSetHours} name='Hours' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetMinutes} name='Minutes' />\n            <Options options={[...Array(60).keys()]} onChange={this.onSetSeconds} name='Seconds' />\n          </div>\n          <div className='Preview'>\n          <Input onChange={this.onSetRounds} placeholder='Number of Rounds' />\n          </div>\n          <div className='Preview'>\n            {this.onConvertToTime()}\n          </div>\n          <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n          <AnchorButton name='Close Timer' onClick={this.onStopTimer} />\n        </DigitalWatch>\n      else if (this.state.status === 'riming')\n      return <DigitalWatch>\n        <div className='StopWatchLabels'>\n          {this.state.rounds}\n        </div>\n        <div className='StopWatch'>\n          {this.state.formatedTime}\n          <SoundEffect isPlaying={this.onTriggerSound()} />\n        </div>\n        <AnchorButton name='Pause' onClick={this.onPauseTimmer} />\n      </DigitalWatch>\n       else if (this.state.status === 'paused')\n       return <DigitalWatch>\n         <div className='StopWatch'>\n           {this.state.formatedTime}\n         </div>\n         <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n         <AnchorButton name='Stop riming' onClick={this.onStopTimer} />\n       </DigitalWatch>\n    }\n\n    return <div className={(this.props.theme) ? this.props.theme : 'Default-Pink-Theme'}>\n      <ComponentTitle>XY</ComponentTitle>\n      {this.renderState()}\n    </div>;\n  }\n}\n\nexport default XY;","import React from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport Helper from \"../../utils/helpers\";\nimport styled from \"styled-components\";\nimport SoundEffect from \"../../audio/SoundEffect\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport DisplayBreaks from \"../generic/DisplayBreaks\";\n\n\n\nconst DigitalWatch = styled.div`\nbackground: #bb0092;\nborder-radius: 30px;\nfont-size: 60px;\ntext-align: center;\ncolor: white;\n`;\n\nconst ComponentTitle = styled.div`\nfont-size: 12px;\ntext-transform: uppercase;\nmargin-bottom: 20px;\ncolor: #3e94cd;\nfont-weight: bold;\n`;\n\nconst WorkflowLabel = styled.div`\nfont-size: 20px;\nfont-weight: 100;\n`;\n\nclass Tabata extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      workflow: 'Workout Timmer',\n      status: 'inactive',\n      date: Helper.sys.getDate(),\n      formatedTime: '',\n      currentTime: '',\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      break: {\n        formatedTime: '',\n        currentTime: '',\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n      },\n      entry: 'new',\n      rounds: 1,\n      enableSound: false,\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    this.onConvertToSeconds = () => parseInt((this.state.hours * 60) * 60) + parseInt(this.state.minutes * 60) + parseInt(this.state.seconds);\n    this.onConvertToBreakSeconds = () => parseInt((this.state.break.hours * 60) * 60) + parseInt(this.state.break.minutes * 60) + parseInt(this.state.break.seconds);\n    \n    this.onConvertToTime = (input = null) =>  {\n      console.log(this.onConvertToSeconds(),\"Time Calc\");\n      let dateTime = new Date(null);\n      dateTime.setSeconds((input) ? input : this.onConvertToSeconds()); // specify value of SECONDS\n      return dateTime.toISOString().substr(11, 8);\n    }\n\n    this.onConvertToBreakTime = (input = null) =>  {\n      console.log(this.onConvertToBreakSeconds(),\"Time Calc\");\n      let dateTime = new Date(null);\n      dateTime.setSeconds((input) ? input : this.onConvertToBreakSeconds()); // specify value of SECONDS\n      return dateTime.toISOString().substr(11, 8);\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStartTimer = () => {\n      this.setState({\n        status: 'active',\n      });\n    }\n\n    this.onStopTimer = () => {\n      let b = this.state.break;\n      b.currentTime = 0.0;\n      this.setState({\n        status: 'inactive',\n        currentTime: 0.0,\n        break: b\n      });\n    }\n\n    this.onPauseTimmer = () => {\n      this.setState({\n        status: 'paused',\n      });\n    }\n\n    this.onStartTiming = () => {\n      const timeInSeconds = 0;\n      let b = this.state.break;\n      b.currentTime = timeInSeconds;\n      this.setState({\n        status: 'riming',\n        currentTime: timeInSeconds,\n        break: b\n      });\n      this.timmerTickTock(true);\n    }\n\n    this.onSetHours = (val) => {\n      this.setState({\n        hours: val,\n      });\n    }\n\n    this.onSetMinutes = (val) => {\n      this.setState({\n        minutes: val,\n      });\n    }\n\n    this.onSetSeconds = (val) => {\n      this.setState({\n        seconds: val,\n      });\n    }\n\n    this.onSetBreakHours = (val) => {\n      let b = this.state.break;\n      b.hours = val;\n\n      // Please do not use state like this, make sure you change it before\n      // submitting. This may actually not be the current state.\n      this.setState({\n        break: b\n      });\n    }\n\n    this.onSetBreakMinutes = (val) => {\n      let b = this.state.break;\n      b.minutes = val;\n\n      // Please do not use state like this, make sure you change it before\n      // submitting. This may actually not be the current state.\n      this.setState({\n        break: b\n      });\n    }\n\n    this.onSetBreakSeconds = (val) => {\n      const h = this.state.break.hours;\n      const m = this.state.break.minutes;\n      const s = val;\n\n      // Please do not use state like this, make sure you change it before\n      // submitting. This may actually not be the current state.\n      this.setState({\n        break: {\n          hours: h,\n          minutes: m,\n          seconds: s,\n        }\n      });\n    }\n    \n    this.onSetRounds = (val) => {\n      this.setState({\n        rounds: val,\n      });\n    }\n\n    this.timmerTickTock = (startOnCurrentThread=false) => {\n      if (this.state.status !== 'riming' && !startOnCurrentThread) return;\n\n      setTimeout(()=>{\n        let newTime = this.state.currentTime + 1.0;\n        const formatedTime = this.onConvertToTime(newTime);\n        \n        if (this.onConvertToSeconds() <= newTime) {\n          if (this.state.rounds > 0) {\n            this.setState({\n              workflow: \"Break Timmer\",\n            });\n            this.timmerBreakTickTock();\n            return;\n          } \n        }\n        \n        this.setState({\n          currentTime: newTime,\n          formatedTime: formatedTime,\n        });\n        if (this.state.rounds > 0 || (this.onConvertToSeconds() > newTime))\n          this.timmerTickTock();\n      },1000);\n    }\n\n    this.timmerBreakTickTock = (startOnCurrentThread=false) => {\n      if (this.state.status !== 'riming' && !startOnCurrentThread) return;\n\n      setTimeout(()=>{\n        let b = this.state.break;\n        let newTime = b.currentTime + 1.0;\n        const formatedTime = this.onConvertToBreakTime(newTime);\n\n        b.currentTime = newTime;\n        b.formatedTime = formatedTime;\n        \n        this.setState({          \n          break:b\n        });\n        if ((this.onConvertToBreakSeconds() > newTime)) {\n          this.timmerBreakTickTock();\n        } else {\n          b.currentTime = 0;\n          const newRounds = this.state.rounds - 1;\n          newTime = 0;\n          this.setState({\n              workflow: \"Workout Timmer\",\n              rounds: newRounds,\n              currentTime: newTime,\n              formatedTime: formatedTime,\n              break: b\n          });\n          this.timmerTickTock();\n        }\n         \n      },1000);\n    }\n\n    \n    this.onTriggerSound = () => {\n      const newTime = this.state.currentTime;\n      if ((!this.state.enableSound && this.state.rounds > 0) || (this.onConvertToSeconds() > newTime)) {\n        return false;\n      }\n      return true;\n    }\n\n    this.renderState = () => {\n      if (this.state.status === 'inactive')\n        return <AnchorButton name='Start Now' onClick={this.onStartTimer} />;\n        else if (this.state.status === 'active')\n        return <DigitalWatch>\n          <DisplayRounds onSetHours={this.onSetHours} onSetMinutes={this.onSetMinutes} onSetSeconds={this.onSetSeconds} onSetRounds={this.onSetRounds} onConvertToTime={this.onConvertToTime} onStartTiming={this.onStartTiming} onStopTimer={this.onStopTimer} />\n          <DisplayBreaks onSetHours={this.onSetBreakHours} onSetMinutes={this.onSetBreakMinutes} onSetSeconds={this.onSetBreakSeconds} onSetRounds={this.onSetRounds} onConvertToTime={this.onConvertToBreakTime} onStartTiming={this.onStartBreakriming} onStopTimer={this.onStopTimer} />\n        </DigitalWatch>\n      else if (this.state.status === 'riming')\n      return <DigitalWatch>\n        <WorkflowLabel>\n          {this.state.workflow}\n        </WorkflowLabel>\n        <div className='StopWatchLabels'>\n          {this.state.rounds}\n        </div>\n        <div className='StopWatch'>\n          {(this.state.workflow === 'Workout Timmer') ? this.state.formatedTime : this.state.break.formatedTime}\n          <SoundEffect isPlaying={this.onTriggerSound()} />\n        </div>\n        <AnchorButton name='Pause' onClick={this.onPauseTimmer} />\n      </DigitalWatch>\n       else if (this.state.status === 'paused')\n       return <DigitalWatch>\n         <div className='StopWatch'>\n           {this.state.formatedTime}\n         </div>\n         <AnchorButton name='Start riming' onClick={this.onStartTiming} />\n         <AnchorButton name='Stop riming' onClick={this.onStopTimer} />\n       </DigitalWatch>\n    }\n\n    return <div className={(this.props.theme) ? this.props.theme : 'Default-Pink-Theme'}>\n      <ComponentTitle>StopWatch</ComponentTitle>\n      {this.renderState()}\n    </div>;\n  }\n}\n\nexport default Tabata;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n// import Scroll from 'react-scroll';\n\n// const Link = Scroll.Link; \n\nconst Timers = styled.div`\nalign-items: center;\nwidth: auto;\nheight: 100%;\noverflow-y: scroll;\ndisplay: inline-block;\n`;\n\nconst Timer = styled.div`\nfont-size: 2.0rem;\npadding: 2%;\nbackground: #2b003cc7;\nmargin: 50px 5.5% 50px 5.5%;\nwidth: 35%;\nmin-height: 250px;\nborder-radius: 50px;\ndisplay: inline-table;\nbox-shadow: 10px 30px 40px 5px #00000069;\ncolor: #ffffff;\ntext-align: center;\nfont-weight: bold;\n-webkit-backdrop-filter: blur(10px);\n-webkit-backdrop-filter: blur(10px);\nbackdrop-filter: blur(10px);\n`;\n\nconst TimerTitle = styled.div`\nfont-size: 1.5rem;\n`;\nconst TimerSubtitle = styled.div`\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -ms-flexbox;\ndisplay: flex;\nfont-size: 15px;\npadding: 50px;\nfont-weight: 400;\npadding-top: 15px;\n`;\n\nfunction App() {\n  const timers = [\n    { title: \"Time your training with a stop watch.\", subTitle: \"Let's get you started with a normal timed session. Time your workout and get feedback from the app in realtime.\", C: <Stopwatch /> },\n    { title: \"Set a timed goal, and track your progress.\", subTitle: \"Be proactive! Let's prepare your training session by setting timed goals.\", C: <Countdown recId={1} /> },\n    { title: \"Goal driven session, with rounds.\", subTitle: \"Awesome, now let's take this a step further. Set timed goals with multiple rounds.\", C: <XY /> },\n    { title: \"Now, we need to pace your training.\", subTitle: \"Take a training session with breaks across measurable intervals.\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer>\n          <TimerTitle>{timer.title}</TimerTitle>\n          <TimerSubtitle>{timer.subTitle}</TimerSubtitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n}\n\nexport default App;\n","import { Component } from 'react';\nimport './Button.css';\n\nclass Button extends Component {\n  render() {\n    return (\n      <button className={`Default-button ${this.props.current ? 'current' : ''}`} onClick={this.props.onClick}>\n        {this.props.text}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport './Panel.css';\n\nclass Panel extends Component {\n  render() {\n    return <div className=\"Default-panel\">{this.props.children}</div>;\n  }\n}\n\nexport default Panel;\n","import Button from '../buttons/Button';\nimport Input from '../Inputs/Input';\nimport Panel from '../Panel/Panel';\nimport { Component } from 'react';\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n  render() {\n    return (\n      <Panel>\n        <div>\n          <Input\n            placeholder=\"Username\"\n            onChange={v => {\n              console.log('LoginForm - changed username to', v);\n            }}\n          />\n        </div>\n        <div>\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={v => {\n              console.log('LoginForm - changed password to', v);\n            }}\n          />\n        </div>\n        <div style={{ padding: 6 }}>\n          <Button\n            text=\"Log In\"\n            onClick={() => {\n              console.log('LoginForm - clicked log in');\n            }}\n          />\n        </div>\n      </Panel>\n    );\n  }\n}\n\nexport default LoginForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport Helper from \"./utils/helpers\";\nimport Login from \"./components/forms/Login\";\nimport { useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link /*, Redirect*/ } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\n\n\nconst Container = styled.div`\nbackground: #0172bdc2;\nheight: 100vh;\ndisplay: block;\noverflow: hidden;\n`;\n\n// Control access to components based on login status.\nconst getAccessBasedRender = (comp) => {\n  return comp;\n  /* // User account and access driven component rendering.\n    if (Helper.sys.isLoggedIn()) return comp;\n\n    const redi = <Redirect to=\"/\" />;\n    const user = Helper.sys.getGlobals().USER;\n    const authorized = Helper.sys.getLogin(user);\n    return (!user) ? redi : (authorized) ? comp : redi;\n  */\n}\n\nfunction App() {\n  let [ USER_DATA ] = useState(null);\n\n  const getAccess = (comp) => {\n    if (!USER_DATA || !Helper.sys.isLoggedIn()) {\n      USER_DATA = Helper.sys.getUserData();\n      return getAccessBasedRender(comp);\n    } else {\n      return comp;\n    }\n  }\n\n  return (\n    <Container>\n      <Helmet>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Helmet>\n      \n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">{(Helper.sys.isLoggedIn()) ? \"Sign out\" : \"Sign in\"}</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/login\">\n            <div>\n              <Login />\n            </div>\n          </Route>\n          <Route exact path=\"/docs\">\n            {getAccess(<DocumentationView />)}\n          </Route>\n          <Route exact path=\"/\">\n            {getAccess(<TimersView />)}\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}